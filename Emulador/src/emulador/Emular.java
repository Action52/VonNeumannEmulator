package emulador;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.Timer;
import java.util.TimerTask;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Luisito
 */
public class Emular extends javax.swing.JFrame {

    /**
     * Creates new form Emular
     */
    HechizoMutante miHechizoMutante= null;
    String codigoE;
    DefaultTableModel modelo = new DefaultTableModel(0,0);
    String header[] = new String[] { "DIR", "CODIGO NUMERICO" };
    
    DefaultTableModel modelomaq = new DefaultTableModel(0,0);
    String headermaq[] = new String[] {"INSTRUCCION EN MAQUINAL"};
    int filaActual;
    int filaActualMaq;
    int valAc = 0;
    Object queIns;
    String laInsT;
    String laInsP;
    String dir;
    String val;
    
    Timer miTimer = new Timer();
    Timer secundario = new Timer();
    
    
    
    
    public Emular() {
        initComponents();
        jButton5.setVisible(false);
        jButton6.setVisible(false);
        jButton7.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Emulador Von Neumann");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Bienvenido al Emulador.");

        jLabel2.setText("Inserta en la caja de texto el programa a convertir, posteriormente da click en el botón de INICIAR para comenzar la emulación.");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Mnemónico:");

        jTextField1.setText("Pega aquí el programa.");

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("INICIAR/REINICIAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DETENER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("CONTINUAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DIR", "CODIGO NUMERICO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/Captura de pantalla 2015-03-30 a la(s) 23.21.23.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("RAM");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("INSTRUCCIÓN ACTUAL");

        jTextField2.setEditable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("MAQUINAL");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "INSTRUCCION EN MAQUINAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton5.setText("START");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("STOP");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("CONT.");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("0");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("AC");

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setText("V1");

        jTextField10.setEditable(false);
        jTextField10.setText("0");

        jTextField11.setEditable(false);
        jTextField11.setText("0");

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel16.setText("V2");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel17.setText("V3");

        jTextField12.setEditable(false);
        jTextField12.setText("0");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel18.setText("V4");

        jTextField13.setEditable(false);
        jTextField13.setText("0");

        jLabel19.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel19.setText("V5");

        jTextField14.setEditable(false);
        jTextField14.setText("0");

        jLabel20.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel20.setText("V6");

        jTextField15.setEditable(false);
        jTextField15.setText("0");

        jTextField16.setEditable(false);
        jTextField16.setText("0");

        jLabel21.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel21.setText("V7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 845, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(51, 51, 51)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(jLabel7))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jButton5)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(38, 38, 38))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jButton7)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel8)
                                                            .addComponent(jLabel15)
                                                            .addComponent(jLabel16)
                                                            .addComponent(jLabel17)
                                                            .addComponent(jLabel18)
                                                            .addComponent(jLabel19)
                                                            .addComponent(jLabel20)
                                                            .addComponent(jLabel21))
                                                        .addGap(28, 28, 28)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(1, 1, 1)
                                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel4))))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton5)
                                .addGap(25, 25, 25)
                                .addComponent(jButton6)
                                .addGap(25, 25, 25)
                                .addComponent(jButton7)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       setVisible(false);
       new Interfaz().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       secundario.cancel();
       miTimer = new Timer();
       jButton5.setVisible(false);
       jButton6.setVisible(false);
       jButton7.setVisible(false);
       tiempoDeMorfosis();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       secundario.cancel();
       
       miTimer.cancel();
       
       jButton5.setVisible(false);
       jButton6.setVisible(false);
       jButton7.setVisible(false);
       filaActual = 0;
       codigoE = jTextField1.getText();
       modelo.setRowCount(0);
       miHechizoMutante = new HechizoMutante(codigoE);
            
       
       String [] cadaIns = miHechizoMutante.getArCodigo();
       modelo.setColumnIdentifiers(header);
       modelomaq.setColumnIdentifiers(headermaq);
            jTable1.setModel(modelo);
            jTable2.setModel(modelomaq);
       for(int i = 0; i < miHechizoMutante.getCuantasIns(); i++)
            modelo.addRow(miHechizoMutante.genInsRam(i));
       
       

       
       jTable1.setRowSelectionAllowed(true); 
       jTable1.setRowSelectionInterval(0, 0);
       

       for(int i = miHechizoMutante.dondeTermina() + 1; i < miHechizoMutante.getCuantasIns(); i++) {
           String unValor = JOptionPane.showInputDialog("Valor de la direccion " + jTable1.getValueAt(i,0) + ":");
           Integer value = Integer.parseInt(unValor);
           miHechizoMutante.queValor.add(jTable1.getValueAt(i,1));
           miHechizoMutante.valor.add(value);  
           miHechizoMutante.direccion.add(jTable1.getValueAt(i,0));
       }
       
       for(int i = 0; i < miHechizoMutante.queValor.size(); i++) {
           switch(i) {
               case 0 : jLabel15.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 1 : jLabel16.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 2 : jLabel17.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 3 : jLabel18.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 4 : jLabel19.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 5 : jLabel20.setText(miHechizoMutante.queValor.get(i).toString()); break;
               case 6 : jLabel21.setText(miHechizoMutante.queValor.get(i).toString()); break;
           }
       }
       
       filaActual = jTable1.getSelectedRow();
       miTimer = new Timer();
       tiempoDeMorfosis();
       
       
       


//       for(int i = 0; i < miHechizoMutante.getCuantasIns(); i++){
//           mueveteEntreFilas(i);
//       }
           
       
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        miTimer.cancel();
        jButton5.setVisible(true);
        jButton6.setVisible(true);
        jButton7.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        jTable2.setRowSelectionInterval(0,0);
        filaActualMaq = 0;
        secundario = new Timer();
        agarrenseQueAyLesVoy();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        secundario.cancel();
        jButton2.setVisible(true);
        jButton3.setVisible(true);
        jButton4.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        secundario = new Timer();
        agarrenseQueAyLesVoy();
    }//GEN-LAST:event_jButton7ActionPerformed

    public int getFilaActual() {
        return filaActual;
    }
    
    public void tiempoDeMorfosis() {
        miTimer.schedule(new TimerTask() {
            public void run() {
                
                if(getFilaActual() <= miHechizoMutante.getCuantasIns()) {
                    
                    jTable1.setRowSelectionInterval(filaActual, filaActual);
                    modelomaq.setRowCount(0);
                    for(int j = 0; j < 5; j++) 
                        modelomaq.addRow(miHechizoMutante.creaFetch(j));
                    queIns = modelo.getValueAt(filaActual, 1);
                    laInsT = queIns.toString();
                    laInsP = "";
                    
                    if(laInsT.length() >= 2)
                        laInsP = laInsT.substring(0, 2);
                    
                    if(laInsT.length() >= 3) {
                        dir = laInsT.substring(2,3);
                        val = laInsT.substring(3,5);
                    }
                    else {
                        dir = "";
                        val = "";
                    }
                    
                    for(int i = 0; i < 8; i++) {
                        modelomaq.addRow(miHechizoMutante.enMaquinal(laInsP, i, dir));
                    }
                    

                    //jTextField3.setText(miHechizoMutante.enMaquinal(filaActual));
                    jTextField2.setText(miHechizoMutante.aDecimal(filaActual));
                    
                    laOperacion(jTextField2.getText());
                    
                    filaActual++;
                    
                }
                else
                    miTimer.cancel();
                
            }
       }, 0, 1000);
    }
    
    public void agarrenseQueAyLesVoy() {
        secundario.schedule(new TimerTask() {
            public void run() {
                
                if(filaActualMaq <= jTable2.getRowCount()) {
                    jTable2.setRowSelectionInterval(filaActualMaq, filaActualMaq);
                    String queMadre = jTable2.getValueAt(filaActualMaq, 0).toString();
                    switch(queMadre) {
                        case "[MAR] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- IR.png"))); break;
                        case "[MAR] <- [PC]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- PC.png"))); break;
                        case "MMRead": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MMRead.png"))); break;
                        case "[PC] <- [PC] + 1": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- PC + 1.png"))); break;
                        case "[IR] <- [MDR]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/IR <- MDR.png"))); break;
                        case "[AC] <- [MDR]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/AC <- MDR.png"))); break;
                        case "[MAR] <- [MDR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- MDR.png"))); break;
                        case "[MDR] <- [AC]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MDR <- AC.png"))); break;
                        case "[AC]1-0 <- [IR]1-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/5.png"))); break;
                        case "[AC] <- +00000": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/5.png"))); break;
                        case "[AC]5 <- [IR]2": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/5.png")));break;
                        case "[AC]4-2 <- 000": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/AC <- -AC.png"))); break;
                        case "[MAR] <- [PC] + [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- PC + IR.png"))); break;
                        case "MMWrite": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MMWrite.png")));break;
                        case "[AC] <- [AC] + [IR]2 000 [IR]1-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/AC <- AC + IR.png")));break;
                        case "[AC] <- [AC] + [MDR]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/AC <- AC + MDR.png")));break;
                        case "[AC] <- [AC] - [MDR]": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/AC <- AC - MDR.png")));break;
                        case "[PC] <- [PC] + [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- PC + IR.png")));break;
                        case "[PC] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- IR.png")));break;
                        case "Si Z = 1, [PC] <- [PC] + [IR]2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- PC + IR.png")));break;
                        case "Si Z = 1, [PC] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- IR.png")));break;
                        case "Si Z = 1, [MAR] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- IR.png")));break;
                        case "[PC] <- [MDR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- MDR.png")));break;
                        case "Si N = 1, [PC] <- [PC] + [IR]2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- PC + IR.png")));break;
                        case "Si N = 1, [PC] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/PC <- IR.png")));break;
                        case "Si N = 1, [MAR] <- [IR] 2-0": jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emulador/MAR <- IR.png")));break;  
                    }
                    
                    
                    filaActualMaq++;  
                    
                }
                else
                    secundario.cancel();
                
            }
       }, 0, 2000);
    }
    
    public void laOperacion(Object o) {
        String [] instruccion = o.toString().split(",");
        Object devuelve = null;    
            switch(instruccion[0]) {
                case "IN":
                    switch(instruccion[1]) {
                        case "A":
                            int valor = Integer.parseInt(miHechizoMutante.valor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString());
                            if(jLabel15.getText().equals("X") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("X")) {
                                jTextField10.setText(Integer.toString(valor));
                            }
                            if(jLabel16.getText().equals("Y") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("Y")) {
                                jTextField11.setText(Integer.toString(valor));
                            }
                            if(jLabel15.getText().equals("N") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("N")) {
                                jTextField10.setText(Integer.toString(valor));
                            }
                        break;
                        case "I":
                            if(jLabel15.getText().equals("X") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("X")) {
                                jTextField10.setText(instruccion[2]);
                            }
                            if(jLabel15.getText().equals("Y") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("Y")) {
                                jTextField11.setText(instruccion[2]);
                            }
                            if(jLabel15.getText().equals("N") && miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).equals("N")) {
                                jTextField10.setText(instruccion[2]);
                            }
                        break;
                    }
                break;
                case "LDA":
                    switch(instruccion[1]) {
                        case "I": jTextField3.setText(instruccion[2]); valAc = Integer.parseInt(instruccion[2]); break;
                        case "A":
                            int valor = Integer.parseInt(miHechizoMutante.valor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString());
                            valAc = valor;
                            jTextField3.setText(Integer.toString(valAc));  
                        break;
                    }
                break;
                case "STA":
                    switch(instruccion[1]) {
                        case "A":
                            int valor = Integer.parseInt(miHechizoMutante.valor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString());
                            String cualVal = miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString();
                            miHechizoMutante.valor.set(miHechizoMutante.direccion.indexOf(instruccion[2]), valAc);
                            if(jLabel15.getText().equals(cualVal)) {
                                jTextField10.setText(Integer.toString(valAc));
                            }
                            if(jLabel16.getText().equals(cualVal)) {
                                jTextField11.setText(Integer.toString(valAc));
                            }
                            if(jLabel17.getText().equals(cualVal)) {
                                jTextField12.setText(Integer.toString(valAc));
                            }
                            if(jLabel18.getText().equals(cualVal)) {
                                jTextField13.setText(Integer.toString(valAc));
                            }
                            if(jLabel19.getText().equals(cualVal)) {
                                jTextField14.setText(Integer.toString(valAc));
                            }
                            if(jLabel20.getText().equals(cualVal)) {
                                jTextField15.setText(Integer.toString(valAc));
                            }
                            if(jLabel21.getText().equals(cualVal)) {
                                jTextField16.setText(Integer.toString(valAc));
                            }
                        break;
                        case "I":
                            cualVal = miHechizoMutante.queValor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString();
                            miHechizoMutante.valor.set(Integer.parseInt(instruccion[2]), valAc);
                            
                            if(jLabel15.getText().equals(cualVal)) {
                                jTextField10.setText(jTextField3.getText());
                            }
                            if(jLabel16.getText().equals(cualVal)) {
                                jTextField11.setText(jTextField3.getText());
                            }
                            if(jLabel17.getText().equals(cualVal)) {
                                jTextField12.setText(jTextField3.getText());
                            }
                            if(jLabel18.getText().equals(cualVal)) {
                                jTextField13.setText(jTextField3.getText());
                            }
                            if(jLabel19.getText().equals(cualVal)) {
                                jTextField14.setText(jTextField3.getText());
                            }
                            if(jLabel20.getText().equals(cualVal)) {
                                jTextField15.setText(jTextField3.getText());
                            }
                            if(jLabel21.getText().equals(cualVal)) {
                                jTextField16.setText(jTextField3.getText());
                            }
                        break;
                    }
                break;
                case "CLA":
                    valAc = 0;
                    jTextField3.setText("0");
                break;
                case "JMZ":
                    switch(instruccion[1]) {
                        case "A":
                            if(valAc == 0) {
                               jTable1.setRowSelectionInterval(Integer.parseInt(instruccion[2]),Integer.parseInt(instruccion[2]));
                               filaActual = Integer.parseInt(instruccion[2]) - 1;
                            }
                        break;
                        case "R":
                            if(valAc == 0) {
                               jTable1.setRowSelectionInterval((filaActual+2),(filaActual+2));
                               filaActual+=2;
                            }
                        break;
                    }
                break;
                case "ADD":
                    switch(instruccion[1]) {
                        case "A":
                            int valorASumar = Integer.parseInt(miHechizoMutante.valor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString());
                            int valorAc = Integer.parseInt(jTextField3.getText());
                            int total = valorASumar + valorAc;
                            valAc = total;
                            jTextField3.setText(Integer.toString(total));
                        break;
                        case "I":
                            valorASumar = Integer.parseInt(instruccion[2]);
                            valorAc = Integer.parseInt(jTextField3.getText());
                            total = valorASumar + valorAc;
                            valAc = total;
                            jTextField3.setText(Integer.toString(total));
                        break;
                    }
                break;
                case "SUB":
                    switch(instruccion[1]) {
                        case "A":
                            int valorARestar = Integer.parseInt(miHechizoMutante.valor.get(miHechizoMutante.direccion.indexOf(instruccion[2])).toString());
                            int valorAc = Integer.parseInt(jTextField3.getText());
                            int total = valorAc - valorARestar;
                            valAc = total;
                            jTextField3.setText(Integer.toString(total));
                        break;
                        case "I":
                            valorARestar = Integer.parseInt(instruccion[2]);
                            valorAc = Integer.parseInt(jTextField3.getText());
                            total = valorAc - valorARestar;
                            valAc = total;
                            jTextField3.setText(Integer.toString(total));
                        break;
                    }
                break;
                case "JMP":
                    switch(instruccion[1]) {
                        case "A":
                               jTable1.setRowSelectionInterval(Integer.parseInt(instruccion[2]),Integer.parseInt(instruccion[2]));
                               filaActual = Integer.parseInt(instruccion[2]) - 1;
                        break;
                        case "R":
                               jTable1.setRowSelectionInterval((filaActual+2),(filaActual+2));
                               filaActual+=2;
                        break;
                    }
                break;
                case "JMN":
                    switch(instruccion[1]) {
                        case "A":
                            if(valAc < 0){
                               jTable1.setRowSelectionInterval(Integer.parseInt(instruccion[2]),Integer.parseInt(instruccion[2]));
                               filaActual = Integer.parseInt(instruccion[2]) -1;
                            }
                        break;
                        case "R":
                            if(valAc < 0){
                               jTable1.setRowSelectionInterval((filaActual+2),(filaActual+2));
                               filaActual+=2;
                            }
                        break;
                    }
                break;
            }
    }
    
//    public void mueveteEntreFilas(int i) {
//        jTable1.setRowSelectionInterval(i, i);
//        try {
//            Thread.sleep(1000);        
//        }
//        catch (InterruptedException ex) {
//            
//        }
//        
//    }
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Emular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Emular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Emular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Emular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emular().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
